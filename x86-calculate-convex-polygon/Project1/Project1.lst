Microsoft (R) Macro Assembler Version 12.00.21005.1	    06/02/16 16:57:27
MASM Template(main.asm					     Page 1 - 1


				TITLE MASM Template(main.asm)
				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
 00000000			.data
 00000000 BD D0 BF E9 A4		str1 BYTE "請輸入有幾個點:",0
	   4A A6 B3 B4 58
	   AD D3 C2 49 3A
	   00
 00000010 BD D0 BF E9 A4		str2 BYTE "請輸入第 ",0
	   4A B2 C4 20 00
 0000001A AD D3 C2 49 AA		str3 BYTE "個點的X = ",0
	   BA 58 20 3D 20
	   00
 00000025 59 20 3D 20 00		str4 BYTE "Y = ",0
 0000002A A5 E6 B4 AB 00		str5 BYTE "交換",0
 0000002F 00000001			count DWORD 1
 00000033 00000000			number DWORD 0
 00000037 00000000			Anum SDWORD 0
 0000003B 00000000			Bnum SDWORD 0
 0000003F 00000000			Cnum SDWORD 0
 00000043 00000000			Snum SDWORD 0

 00000047 00000000			Adec SDWORD 0
 0000004B 00000000			Bdec SDWORD 0
 0000004F 00000000			Cdec SDWORD 0
 00000053 00000000			Sdec SDWORD 0
 00000057 00000000			AreaNum SDWORD 0
 0000005B 00000000			AreaDec SDWORD 0
 00000008			COORD_ STRUCT
 00000000  00000000			X SDWORD ?
 00000004  00000000		 	Y SDWORD ?
				COORD_ ENDS
 0000005F  00000014 [			AllPoints COORD_ 20 DUP(<0,0>)
	    00000000
	    00000000
	   ]
 00000000			.code
				;-------------------------------------------主程式
 00000000			main PROC
 00000000  BA 00000000 R		mov edx,OFFSET str1
 00000005  E8 00000000 E		Call WriteString
 0000000A  E8 00000000 E		Call ReadDec
 0000000F  A3 00000033 R		mov number,eax
 00000014  8B 0D 00000033 R		mov ecx,number
 0000001A  BE 00000000			mov esi,0
 0000001F			L1:
 0000001F  BA 00000010 R		mov edx,OFFSET str2
 00000024  E8 00000000 E		Call WriteString
 00000029  A1 0000002F R		mov eax,count
 0000002E  E8 00000000 E		Call WriteDec
 00000033  BA 0000001A R		mov edx,OFFSET str3
 00000038  E8 00000000 E		Call WriteString

 0000003D  E8 00000000 E		Call ReadInt
 00000042  89 86 0000005F R		mov [AllPoints+esi].X,eax

 00000048  BA 00000025 R		mov edx,OFFSET str4
 0000004D  E8 00000000 E		Call WriteString

 00000052  E8 00000000 E		Call ReadInt
 00000057  89 86 00000063 R		mov [AllPoints+esi].Y,eax
 0000005D  83 C6 08			add esi,TYPE COORD_                     ;※重點※
 00000060  FF 05 0000002F R		inc count
 00000066  E2 B7			Loop L1
 00000068  E8 000000A0			Call Bubble_sortY
 0000006D  E8 00000047			Call Bubble_sortX
 00000072  E8 000000EA			Call ckeckPoint
 00000077  E8 00000194			Call CountABC

 0000007C  83 3D 0000005B R		cmp AreaDec,10
	   0A
 00000083  72 19			jnae Next2
 00000085  BB 0000000A			mov ebx,10
 0000008A  A1 0000005B R		mov eax,AreaDec
 0000008F  99				CDQ 
 00000090  F7 FB			idiv ebx
 00000092  01 05 00000057 R		ADD AreaNum,eax
 00000098  89 15 0000005B R		mov AreaDec,edx
 0000009E			Next2:
 0000009E  A1 00000057 R		mov eax,AreaNum
 000000A3  E8 00000000 E		call WriteInt
 000000A8  A1 0000005B R		mov eax,AreaDec
 000000AD  E8 00000000 E		call WriteInt
				exit
 000000B9			main ENDP
				;--------------------------------------------
 000000B9			Bubble_sortX PROC
 000000B9  8B 0D 00000033 R		mov ecx,number							;設次數為5
 000000BF  49				dec ecx
 000000C0  B8 00000000			mov eax,0								;eax歸零
 000000C5  BF 00000000			mov edi,0
 000000CA			L2:
 000000CA  51				push ecx								;將ecx數字壓入stack中
 000000CB  BF 00000000			mov edi,0								;將esi歸零
 000000D0			L3:
 000000D0  8B 87 0000005F R		mov eax,[AllPoints+edi].X
 000000D6  8B 9F 00000067 R		mov ebx,[AllPoints+edi+TYPE COORD_].X
 000000DC  3B D8			cmp ebx,eax								;比較ebx和eax
 000000DE  73 24			jae L4									;若大於跳至L4若大於等於執行以下
 000000E0  89 9F 0000005F R		mov [AllPoints+edi].X,ebx
 000000E6  89 87 00000067 R		mov [AllPoints+edi+TYPE COORD_].X,eax

 000000EC  8B 87 00000063 R		mov eax,[AllPoints+edi].Y
 000000F2  8B 9F 0000006B R		mov ebx,[AllPoints+edi+TYPE COORD_].Y
 000000F8  89 9F 00000063 R		mov [AllPoints+edi].Y,ebx
 000000FE  89 87 0000006B R		mov [AllPoints+edi+TYPE COORD_].Y,eax
 00000104			L4:
 00000104  83 C7 08			add edi,TYPE COORD_ 					;esi+2 前往下一格儲存格
 00000107  E2 C7			LOOP L3									;如果不相同 跳至L3
 00000109  59				pop ecx									;將原本stack 放回 ecx
 0000010A  E2 BE			LOOP L2									;跳回L2
 0000010C  C3				ret
 0000010D			Bubble_sortX ENDP
				;--------------------------------------------
				;--------------------------------------------
 0000010D			Bubble_sortY PROC
 0000010D  8B 0D 00000033 R		mov ecx,number							;設次數為5
 00000113  49				dec ecx
 00000114  B8 00000000			mov eax,0								;eax歸零
 00000119  BF 00000000			mov edi,0
 0000011E			L2:
 0000011E  51				push ecx								;將ecx數字壓入stack中
 0000011F  BF 00000000			mov edi,0								;將esi歸零
 00000124			L3:
 00000124  8B 87 00000063 R		mov eax,[AllPoints+edi].Y
 0000012A  8B 9F 0000006B R		mov ebx,[AllPoints+edi+TYPE COORD_].Y
 00000130  3B D8			cmp ebx,eax								;比較ebx和eax
 00000132  76 24			jbe L4									;若大於跳至L4若大於等於執行以下
 00000134  89 9F 00000063 R		mov [AllPoints+edi].Y,ebx
 0000013A  89 87 0000006B R		mov [AllPoints+edi+TYPE COORD_].Y,eax

 00000140  8B 87 0000005F R		mov eax,[AllPoints+edi].X
 00000146  8B 9F 00000067 R		mov ebx,[AllPoints+edi+TYPE COORD_].X
 0000014C  89 9F 0000005F R		mov [AllPoints+edi].X,ebx
 00000152  89 87 00000067 R		mov [AllPoints+edi+TYPE COORD_].X,eax
 00000158			L4:
 00000158  83 C7 08			add edi,TYPE COORD_ 					;esi+2 前往下一格儲存格
 0000015B  E2 C7			LOOP L3									;如果不相同 跳至L3
 0000015D  59				pop ecx									;將原本stack 放回 ecx
 0000015E  E2 BE			LOOP L2									;跳回L2
 00000160  C3				ret
 00000161			Bubble_sortY ENDP
				;--------------------------------------------
				;--------------------------------------------
 00000161			ckeckPoint PROC
					LOCAL num:DWORD,now:DWORD;
 00000167  BF 00000000			mov edi,0
 0000016C  8B 0D 00000033 R		mov ecx,number  ;6
 00000172  83 E9 02			sub ecx,2 ;4
 00000175  89 4D FC			mov num,ecx ;4
 00000178			L1:
 00000178  83 F9 00			cmp ecx,0
 0000017B  75 02			jne L5
					ret
 0000017F			L5:
 0000017F  8B 87 0000005F R		mov eax,[AllPoints+edi].X;2
 00000185  8B 9F 00000067 R		mov ebx,[AllPoints+edi+TYPE COORD_].X;2
 0000018B  8B 97 0000006F R		mov edx,[AllPoints+edi+TYPE COORD_+TYPE COORD_].X;2
 00000191  3B C3			cmp eax,ebx
 00000193  75 3D			jne L2
 00000195  3B C2			cmp eax,edx
 00000197  75 39			jne L2
 00000199  89 7D F8			mov now,edi ; 0
 0000019C  89 4D FC			mov num,ecx
 0000019F  FF 0D 00000033 R		dec number
 000001A5			L3:
 000001A5  8B 87 0000006F R		mov eax,[AllPoints+edi+TYPE COORD_+TYPE COORD_].X ;1
 000001AB  8B 9F 00000073 R		mov ebx,[AllPoints+edi+TYPE COORD_+TYPE COORD_].Y ;3
 000001B1  89 87 00000067 R		mov [AllPoints+edi+TYPE COORD_].X,eax;1
 000001B7  89 9F 0000006B R		mov [AllPoints+edi+TYPE COORD_].Y,ebx;4
 000001BD  83 C7 08			ADD edi,TYPE COORD_
 000001C0  E2 E3			Loop L3
 000001C2  FF 4D FC			dec num
 000001C5  8B 7D F8			mov edi,now
 000001C8  8B 4D FC			mov ecx,num
 000001CB  83 F9 00			cmp ecx,0
 000001CE  75 A8			jne L1
					ret
 000001D2			L2:
 000001D2  49				dec ecx
 000001D3  83 F9 00			cmp ecx,0
 000001D6  75 02			jne L4
					ret
 000001DA			L4:
 000001DA  83 C7 08			ADD edi,TYPE COORD_
 000001DD  EB 99			jmp L1
 000001DF			ckeckPoint ENDP
				;--------------------------------------------
 000001DF			print PROC
 000001DF  8B 0D 00000033 R		mov ecx,number
 000001E5  BE 00000000			mov esi,0
 000001EA			L1:
 000001EA  8B 86 0000005F R		mov eax,[AllPoints+esi].X
 000001F0  E8 00000000 E		Call WriteInt
 000001F5  8B 86 00000063 R		mov eax,[AllPoints+esi].Y
 000001FB  E8 00000000 E		Call WriteInt
 00000200  E8 00000000 E		Call Crlf
 00000205  83 C6 08			ADD esi,TYPE COORD_
 00000208  E2 E0			LOOP L1
 0000020A  E8 00000000 E		Call crlf
 0000020F  C3				ret
 00000210			print ENDP
				;--------------------------------------------
				;------------------------------------------------------海龍公式 S,
 00000210			CountABC PROC
					LOCAL now:DWORD,count2:DWORD,ScratchS:DWORD,ScratchA:DWORD,ScratchB:DWORD,ScratchC:DWORD
 00000216  E8 FFFFFFC4			Call print
				;-------------------------------------------邊長A start
 0000021B			BigWhile:
 0000021B  83 3D 00000033 R		cmp number,3
	   03
 00000222  73 02			jae start1
					ret
 00000226			start1:
 00000226  C7 45 FC			mov now,0
	   00000000
 0000022D  A1 0000005F R		mov eax,[AllPoints].X
 00000232  8B 1D 00000063 R		mov ebx,[AllPoints].Y
 00000238  2B 05 00000067 R		SUB eax,[AllPoints+TYPE COORD_].X
 0000023E  2B 1D 0000006B R		SUB ebx,[AllPoints+TYPE COORD_].Y
 00000244  0F AF C0			imul eax,eax
 00000247  0F AF DB			imul ebx,ebx
 0000024A  03 C3			ADD eax,ebx
 0000024C  6B C0 64			imul eax,100
 0000024F  83 F8 00			cmp eax,0
 00000252  73 02			jae nosign1
 00000254  F7 D8			neg eax
 00000256			nosign1:
 00000256  BB 00000000			mov ebx,0 										;歸零
 0000025B			square1:
 0000025B  FF 45 FC			inc now 										;ebx++
 0000025E  8B 5D FC			mov ebx,now
 00000261  0F AF DB			imul ebx,ebx										;eax*eax
 00000264  3B D8			cmp ebx,eax 									; if eax*eax < B^2 -4ac
 00000266  74 07			je out2 									
 00000268  77 02			ja out1 									
 0000026A  EB EF			jmp square1
 0000026C			out1:
 0000026C  FF 4D FC			dec now
 0000026F			out2:
 0000026F  8B 45 FC			mov eax,now
 00000272  BB 0000000A			mov ebx,10
 00000277  99				CDQ 
 00000278  F7 FB			idiv ebx
 0000027A  A3 00000037 R		mov Anum,eax
 0000027F  89 15 00000047 R		mov Adec,edx
				;--------------------------------------------邊長A end
				;--------------------------------------------邊長B start
 00000285  C7 45 FC			mov now,0
	   00000000
 0000028C  A1 00000067 R		mov eax,[AllPoints+TYPE COORD_].X
 00000291  8B 1D 0000006B R		mov ebx,[AllPoints+TYPE COORD_].Y
 00000297  2B 05 0000006F R		SUB eax,[AllPoints+TYPE COORD_+TYPE COORD_].X
 0000029D  2B 1D 00000073 R		SUB ebx,[AllPoints+TYPE COORD_+TYPE COORD_].Y
 000002A3  0F AF C0			imul eax,eax
 000002A6  0F AF DB			imul ebx,ebx
 000002A9  03 C3			ADD eax,ebx
 000002AB  6B C0 64			imul eax,100
 000002AE  83 F8 00			cmp eax,0
 000002B1  73 02			jae nosign2
 000002B3  F7 D8			neg eax
 000002B5			nosign2:
 000002B5  BB 00000000			mov ebx,0 										;歸零
 000002BA			square2:
 000002BA  FF 45 FC			inc now 						
 000002BD  8B 5D FC			mov ebx,now
 000002C0  0F AF DB			imul ebx,ebx							
 000002C3  3B D8			cmp ebx,eax 								
 000002C5  74 07			je out4								
 000002C7  77 02			ja out3 									
 000002C9  EB EF			jmp square2
 000002CB			out3:
 000002CB  FF 4D FC			dec now
 000002CE			out4:
 000002CE  8B 45 FC			mov eax,now
 000002D1  BB 0000000A			mov ebx,10
 000002D6  99				CDQ
 000002D7  F7 FB			idiv ebx
 000002D9  A3 0000003B R		mov Bnum,eax
 000002DE  89 15 0000004B R		mov Bdec,edx
				;--------------------------------------------邊長B end
				;--------------------------------------------邊長C start
 000002E4  C7 45 FC			mov now,0
	   00000000

 000002EB  A1 0000005F R		mov eax,[AllPoints].X
 000002F0  8B 1D 00000063 R		mov ebx,[AllPoints].Y
 000002F6  2B 05 0000006F R		SUB eax,[AllPoints+TYPE COORD_+TYPE COORD_].X
 000002FC  2B 1D 00000073 R		SUB ebx,[AllPoints+TYPE COORD_+TYPE COORD_].Y
 00000302  0F AF C0			imul eax,eax
 00000305  0F AF DB			imul ebx,ebx
 00000308  03 C3			ADD eax,ebx
 0000030A  6B C0 64			imul eax,100
 0000030D  83 F8 00			cmp eax,0
 00000310  73 02			jae nosign3
 00000312  F7 D8			neg eax
 00000314			nosign3:
 00000314  BB 00000000			mov ebx,0 										;歸零
 00000319			square3:
 00000319  FF 45 FC			inc now 										;ebx++
 0000031C  8B 5D FC			mov ebx,now
 0000031F  0F AF DB			imul ebx,ebx										;eax*eax
 00000322  3B D8			cmp ebx,eax 									; if eax*eax < B^2 -4ac
 00000324  74 07			je out6 									
 00000326  77 02			ja out5 									
 00000328  EB EF			jmp square3
 0000032A			out5:
 0000032A  FF 4D FC			dec now
 0000032D			out6:
 0000032D  8B 45 FC			mov eax,now
 00000330  BB 0000000A			mov ebx,10
 00000335  99				CDQ 
 00000336  F7 FB			idiv ebx
 00000338  A3 0000003F R		mov Cnum,eax
 0000033D  89 15 0000004F R		mov Cdec,edx
				;--------------------------------------------邊長C end
				;--------------------------------------------S start
 00000343  C7 45 F8			mov count2,0
	   00000000
 0000034A  A1 00000047 R		mov eax,Adec
 0000034F  03 05 0000004B R		add eax,Bdec
 00000355  03 05 0000004F R		add eax,Cdec
 0000035B  83 F8 0A			cmp eax,10
 0000035E  72 15			jnae bigThan
 00000360  83 E8 0A			SUB eax,10
 00000363  FF 45 F8			inc count2
 00000366  BB 00000002			mov ebx,2
 0000036B  99				CDQ
 0000036C  F7 FB			idiv ebx
 0000036E  A3 00000053 R		mov Sdec,eax
 00000373  EB 05			jmp GoTo2
 00000375			bigThan:
 00000375  A3 00000053 R		mov Sdec,eax
 0000037A			GoTo2:
 0000037A  BB 00000002			mov ebx,2
 0000037F  A1 00000037 R		mov eax,Anum
 00000384  03 05 0000003B R		add eax,Bnum
 0000038A  03 05 0000003F R		add eax,Cnum
 00000390  03 45 F8			add eax,count2
 00000393  99				CDQ 
 00000394  F7 FB			idiv ebx
 00000396  A3 00000043 R		mov Snum,eax
 0000039B  8B C2			mov eax,edx
 0000039D  6B C0 0A			imul eax,10
 000003A0  99				CDQ 
 000003A1  F7 FB			idiv ebx
 000003A3  01 05 00000053 R		ADD Sdec,eax
 000003A9  A1 00000043 R		mov eax,Snum
 000003AE  8B 1D 00000053 R		mov ebx,Sdec
				;---------------------------------------S end
				;---------------------------------------海龍
 000003B4  A1 00000043 R		mov eax,Snum
 000003B9  6B C0 0A			imul eax,10
 000003BC  03 05 00000053 R		ADD eax,Sdec
 000003C2  89 45 F4			mov ScratchS,eax

 000003C5  B8 00000000			mov eax,0
 000003CA  BB 00000000			mov ebx,0
 000003CF  A1 00000037 R		mov eax,Anum
 000003D4  6B C0 0A			imul eax,10
 000003D7  03 05 00000047 R		ADD eax,Adec
 000003DD  8B 5D F4			mov ebx,ScratchS
 000003E0  2B D8			SUB ebx,eax
 000003E2  89 5D F0			mov ScratchA,ebx

 000003E5  B8 00000000			mov eax,0
 000003EA  BB 00000000			mov ebx,0
 000003EF  8B 1D 0000003B R		mov ebx,Bnum
 000003F5  6B DB 0A			imul ebx,10
 000003F8  03 1D 0000004B R		ADD ebx,Bdec
 000003FE  8B 45 F4			mov eax,ScratchS
 00000401  2B C3			SUB eax,ebx
 00000403  89 45 EC			mov ScratchB,eax

 00000406  B8 00000000			mov eax,0
 0000040B  BB 00000000			mov ebx,0
 00000410  8B 1D 0000003F R		mov ebx,Cnum
 00000416  6B DB 0A			imul ebx,10
 00000419  03 1D 0000004F R		ADD ebx,Cdec
 0000041F  8B 45 F4			mov eax,ScratchS
 00000422  2B C3			SUB eax,ebx
 00000424  89 45 E8			mov ScratchC,eax

 00000427  B8 00000000			mov eax,0
 0000042C  BB 00000000			mov ebx,0
 00000431  8B 45 F4			mov eax,ScratchS
 00000434  F7 6D F0			imul ScratchA
 00000437  F7 6D EC			imul ScratchB
 0000043A  F7 6D E8			imul ScratchC
 0000043D  99				CDQ
 0000043E  BB 00000064			mov ebx,100
 00000443  F7 FB			idiv ebx
 00000445  83 F8 00			cmp eax,0
 00000448  73 02			jnb sign
 0000044A  F7 D8			neg eax
 0000044C			sign:
				;----------------------------------------------
 0000044C  BB 00000000			mov ebx,0 										;歸零
 00000451  C7 45 FC			mov now,0
	   00000000
 00000458			square4:
 00000458  FF 45 FC			inc now 						
 0000045B  8B 5D FC			mov ebx,now
 0000045E  0F AF DB			imul ebx,ebx							
 00000461  3B D8			cmp ebx,eax 								
 00000463  74 07			je out8								
 00000465  77 02			ja out7 									
 00000467  EB EF			jmp square4
 00000469			out7:
 00000469  FF 4D FC			dec now
 0000046C			out8:
 0000046C  8B 45 FC			mov eax,now
 0000046F  BB 0000000A			mov ebx,10
 00000474  99				CDQ
 00000475  F7 FB			idiv ebx
 00000477  01 05 00000057 R		ADD AreaNum,eax
 0000047D  01 15 0000005B R		ADD AreaDec,edx
 00000483  E8 00000000 E		Call crlf
 00000488  E8 00000000 E		Call crlf
					;----副程
 0000048D  83 3D 00000033 R		cmp number,3
	   03
 00000494  75 02			jne NEXT
					ret
 00000498			NEXT:
 00000498  E8 00000007			Call deletePoint
 0000049D  E9 FFFFFD79			jmp BigWhile
				;---------------------------------------海龍 end
					ret
 000004A4			CountABC ENDP
				;--------------------------------------------
 000004A4			deletePoint PROC
 000004A4  8B 0D 00000033 R		mov ecx,number
 000004AA  BF 00000000			mov edi,0
 000004AF  A1 00000063 R		mov eax,[AllPoints].Y
 000004B4  3B 05 0000006B R		cmp eax,[AllPoints+TYPE COORD_].Y		;
 000004BA  72 32			jb L1									;1>2↓
 000004BC  A1 0000006B R		mov eax,[AllPoints+TYPE COORD_].Y
 000004C1  3B 05 00000073 R		cmp eax,[AllPoints+TYPE COORD_+TYPE COORD_].Y ;2若比3大
 000004C7  72 08			jb L3									;2>3↓
 000004C9  FF 0D 00000033 R		dec number
 000004CF  EB 69			jmp for1
 000004D1			L3:
 000004D1  A1 00000063 R		mov eax,[AllPoints].Y
 000004D6  3B 05 00000073 R		cmp eax,[AllPoints+TYPE COORD_+TYPE COORD_].Y
 000004DC  72 08			jb L4									;1>3↓
 000004DE  FF 0D 00000033 R		dec number
 000004E4  EB 30			jmp change
 000004E6			L4:
 000004E6  FF 0D 00000033 R		dec number
 000004EC  EB 4C			jmp for1
 000004EE			L1:											;1<2↓
 000004EE  A1 0000006B R		mov eax,[AllPoints+TYPE COORD_].Y
 000004F3  3B 05 00000073 R		cmp eax,[AllPoints+TYPE COORD_+TYPE COORD_].Y
 000004F9  77 08			ja L2									;2<3
 000004FB  FF 0D 00000033 R		dec number
 00000501  EB 37			jmp for1
 00000503			L2:
 00000503  A1 00000063 R		mov eax,[AllPoints].Y
 00000508  3B 05 00000073 R		cmp eax,[AllPoints+TYPE COORD_+TYPE COORD_].Y
 0000050E  FF 0D 00000033 R		dec number
 00000514  77 24			ja for1									;1>3
															;1<3↓
 00000516			change:
 00000516  BA 0000002A R		mov edx,OFFSET str5
 0000051B  E8 00000000 E		Call WriteString
 00000520  A1 0000005F R		mov eax,[AllPoints].X
 00000525  8B 1D 00000063 R		mov ebx,[AllPoints].Y
 0000052B  A3 00000067 R		mov [AllPoints+TYPE COORD_].X,eax
 00000530  A3 0000006B R		mov [AllPoints+TYPE COORD_].Y,eax
 00000535  E8 00000000 E		Call crlf
 0000053A			for1:
 0000053A  8B 87 00000067 R		mov eax,[AllPoints+edi+TYPE COORD_].X ;1
 00000540  8B 9F 0000006B R		mov ebx,[AllPoints+edi+TYPE COORD_].Y ;3
 00000546  89 87 0000005F R		mov [AllPoints+edi].X,eax;1
 0000054C  89 9F 00000063 R		mov [AllPoints+edi].Y,ebx;4
 00000552  83 C7 08			ADD edi,TYPE COORD_
 00000555  E2 E3			Loop for1
 00000557  E8 FFFFFC83			Call print
 0000055C  C3				ret
 0000055D			deletePoint ENDP
				;--------------------------------------------
				END main
Microsoft (R) Macro Assembler Version 12.00.21005.1	    06/02/16 16:57:27
MASM Template(main.asm					     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD_ . . . . . . . . . . . . .	 00000008
  X  . . . . . . . . . . . . . .	 00000000	 DWord
  Y  . . . . . . . . . . . . . .	 00000004	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000000FF Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000055D Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

Bubble_sortX . . . . . . . . . .	P Near	 000000B9 _TEXT	Length= 00000054 Public STDCALL
  L2 . . . . . . . . . . . . . .	L Near	 000000CA _TEXT	
  L3 . . . . . . . . . . . . . .	L Near	 000000D0 _TEXT	
  L4 . . . . . . . . . . . . . .	L Near	 00000104 _TEXT	
Bubble_sortY . . . . . . . . . .	P Near	 0000010D _TEXT	Length= 00000054 Public STDCALL
  L2 . . . . . . . . . . . . . .	L Near	 0000011E _TEXT	
  L3 . . . . . . . . . . . . . .	L Near	 00000124 _TEXT	
  L4 . . . . . . . . . . . . . .	L Near	 00000158 _TEXT	
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CountABC . . . . . . . . . . . .	P Near	 00000210 _TEXT	Length= 00000294 Public STDCALL
  now  . . . . . . . . . . . . .	DWord	 bp - 00000004
  count2 . . . . . . . . . . . .	DWord	 bp - 00000008
  ScratchS . . . . . . . . . . .	DWord	 bp - 0000000C
  ScratchA . . . . . . . . . . .	DWord	 bp - 00000010
  ScratchB . . . . . . . . . . .	DWord	 bp - 00000014
  ScratchC . . . . . . . . . . .	DWord	 bp - 00000018
  BigWhile . . . . . . . . . . .	L Near	 0000021B _TEXT	
  start1 . . . . . . . . . . . .	L Near	 00000226 _TEXT	
  nosign1  . . . . . . . . . . .	L Near	 00000256 _TEXT	
  square1  . . . . . . . . . . .	L Near	 0000025B _TEXT	
  out1 . . . . . . . . . . . . .	L Near	 0000026C _TEXT	
  out2 . . . . . . . . . . . . .	L Near	 0000026F _TEXT	
  nosign2  . . . . . . . . . . .	L Near	 000002B5 _TEXT	
  square2  . . . . . . . . . . .	L Near	 000002BA _TEXT	
  out3 . . . . . . . . . . . . .	L Near	 000002CB _TEXT	
  out4 . . . . . . . . . . . . .	L Near	 000002CE _TEXT	
  nosign3  . . . . . . . . . . .	L Near	 00000314 _TEXT	
  square3  . . . . . . . . . . .	L Near	 00000319 _TEXT	
  out5 . . . . . . . . . . . . .	L Near	 0000032A _TEXT	
  out6 . . . . . . . . . . . . .	L Near	 0000032D _TEXT	
  bigThan  . . . . . . . . . . .	L Near	 00000375 _TEXT	
  GoTo2  . . . . . . . . . . . .	L Near	 0000037A _TEXT	
  sign . . . . . . . . . . . . .	L Near	 0000044C _TEXT	
  square4  . . . . . . . . . . .	L Near	 00000458 _TEXT	
  out7 . . . . . . . . . . . . .	L Near	 00000469 _TEXT	
  out8 . . . . . . . . . . . . .	L Near	 0000046C _TEXT	
  NEXT . . . . . . . . . . . . .	L Near	 00000498 _TEXT	
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ckeckPoint . . . . . . . . . . .	P Near	 00000161 _TEXT	Length= 0000007E Public STDCALL
  num  . . . . . . . . . . . . .	DWord	 bp - 00000004
  now  . . . . . . . . . . . . .	DWord	 bp - 00000008
  L1 . . . . . . . . . . . . . .	L Near	 00000178 _TEXT	
  L5 . . . . . . . . . . . . . .	L Near	 0000017F _TEXT	
  L3 . . . . . . . . . . . . . .	L Near	 000001A5 _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 000001D2 _TEXT	
  L4 . . . . . . . . . . . . . .	L Near	 000001DA _TEXT	
deletePoint  . . . . . . . . . .	P Near	 000004A4 _TEXT	Length= 000000B9 Public STDCALL
  L3 . . . . . . . . . . . . . .	L Near	 000004D1 _TEXT	
  L4 . . . . . . . . . . . . . .	L Near	 000004E6 _TEXT	
  L1 . . . . . . . . . . . . . .	L Near	 000004EE _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 00000503 _TEXT	
  change . . . . . . . . . . . .	L Near	 00000516 _TEXT	
  for1 . . . . . . . . . . . . .	L Near	 0000053A _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000000B9 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 0000001F _TEXT	
  Next2  . . . . . . . . . . . .	L Near	 0000009E _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
print  . . . . . . . . . . . . .	P Near	 000001DF _TEXT	Length= 00000031 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 000001EA _TEXT	
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
Adec . . . . . . . . . . . . . .	DWord	 00000047 _DATA	
AllPoints  . . . . . . . . . . .	COORD_	 0000005F _DATA	
Anum . . . . . . . . . . . . . .	DWord	 00000037 _DATA	
AreaDec  . . . . . . . . . . . .	DWord	 0000005B _DATA	
AreaNum  . . . . . . . . . . . .	DWord	 00000057 _DATA	
Bdec . . . . . . . . . . . . . .	DWord	 0000004B _DATA	
Bnum . . . . . . . . . . . . . .	DWord	 0000003B _DATA	
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
Cdec . . . . . . . . . . . . . .	DWord	 0000004F _DATA	
Cnum . . . . . . . . . . . . . .	DWord	 0000003F _DATA	
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
Sdec . . . . . . . . . . . . . .	DWord	 00000053 _DATA	
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
Snum . . . . . . . . . . . . . .	DWord	 00000043 _DATA	
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
count  . . . . . . . . . . . . .	DWord	 0000002F _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
number . . . . . . . . . . . . .	DWord	 00000033 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
str1 . . . . . . . . . . . . . .	Byte	 00000000 _DATA	
str2 . . . . . . . . . . . . . .	Byte	 00000010 _DATA	
str3 . . . . . . . . . . . . . .	Byte	 0000001A _DATA	
str4 . . . . . . . . . . . . . .	Byte	 00000025 _DATA	
str5 . . . . . . . . . . . . . .	Byte	 0000002A _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
