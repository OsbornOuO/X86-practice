Microsoft (R) Macro Assembler Version 12.00.21005.1	    05/11/16 12:43:46
MASM Template(main.asm					     Page 1 - 1


				TITLE MASM Template(main.asm)
				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
 00000000			.data
 00000000 45 6E 74 65 72		keyInput BYTE  "Enter your student ID(後四碼):",0
	   20 79 6F 75 72
	   20 73 74 75 64
	   65 6E 74 20 49
	   44 28 AB E1 A5
	   7C BD 58 29 3A
	   00
 0000001F 45 6E 74 65 72		str1 BYTE "Enter your Chinese scores :",0
	   20 79 6F 75 72
	   20 43 68 69 6E
	   65 73 65 20 73
	   63 6F 72 65 73
	   20 3A 00
 0000003B 45 6E 74 65 72		str2 BYTE "Enter your Math scores    :",0
	   20 79 6F 75 72
	   20 4D 61 74 68
	   20 73 63 6F 72
	   65 73 20 20 20
	   20 3A 00
 00000057 45 6E 74 65 72		str3 BYTE "Enter your English scores :",0;文字字串
	   20 79 6F 75 72
	   20 45 6E 67 6C
	   69 73 68 20 73
	   63 6F 72 65 73
	   20 3A 00
 00000073 BE C7 20 B8 B9		str4 BYTE "學 號|",0
	   7C 00
 0000007A B0 EA A4 E5 7C		str5 BYTE "國文|",0
	   00
 00000080 BC C6 BE C7 7C		str6 BYTE "數學|",0
	   00
 00000086 AD 5E A4 E5 7C		str7 BYTE "英文|",0;文字字串
	   00
 0000008C C1 60 A4 C0 7C		str8 BYTE "總分|",0;文字字串
	   00
 00000092 A6 57 A6 B8 7C		str9 BYTE "名次|",0;文字字串
	   00
 00000098 BF E9 A4 4A BF		str10 BYTE "輸入錯誤 請重新輸入成績介於0~100",0;文字字串
	   F9 BB 7E 20 BD
	   D0 AD AB B7 73
	   BF E9 A4 4A A6
	   A8 C1 5A A4 B6
	   A9 F3 30 7E 31
	   30 30 00
 000000B9 B5 B2 A7 F4 00		str11 BYTE "結束",0;文字字串
 000000BE  00000014 [			name_array WORD 20 DUP(0)
	    0000
	   ]
 000000E6  00000006 [			chinese_array WORD 6 DUP(0)
	    0000
	   ]
 000000F2  00000006 [			math_array WORD 6 DUP(0)
	    0000
	   ]
 000000FE  00000006 [			english_array WORD 6 DUP(0)
	    0000
	   ]
 0000010A  00000006 [			sum_array WORD 6 DUP(0)
	    0000
	   ]
 00000116  00000006 [			place_array WORD 6 DUP(0)
	    0000
	   ]
 00000122 00				stop BYTE 0 

 00000123 0000				baffer WORD 0
 00000000			.code
 00000000			main PROC
 00000000  B9 00000006			mov ecx,6
 00000005  BE 00000000			mov esi,0
 0000000A			KeyIn:
 0000000A  BA 00000000 R		Mov edx,offset keyInput					;搬入請輸入學號字串
 0000000F  E8 00000000 E		Call WriteString                        ;呼叫印出字串
 00000014  E8 00000000 E		call ReadDec                            ;讀取為無號數放入eax
 00000019  66| 89 86			mov [name_array+esi],ax				    ;將讀取到的ax放進姓名的陣列中
	   000000BE R
					;-------------------------------------
 00000020  BA 0000001F R		Mov edx,offset str1						;搬入請輸入國文成績
 00000025  E8 00000000 E		Call WriteString						;呼叫印出字串
 0000002A  E8 00000000 E		call ReadInt							;讀取為無號數放入eax
 0000002F  66| 83 F8 64			cmp ax,100								;比對是否大於100
 00000033  77 56			ja Again								;若大於跳至Again
 00000035  66| 83 F8 00			cmp ax,0								;比對是否小於0
 00000039  72 50			jb Again								;若小於跳至Again
 0000003B  66| 89 86			mov [chinese_array+esi],ax				;若都不成立ax則放入國文陣列
	   000000E6 R
					;-------------------------------------
 00000042  BA 0000003B R		Mov edx,offset str2						;搬入請輸入數學成績
 00000047  E8 00000000 E		Call WriteString						;呼叫印出字串
 0000004C  E8 00000000 E		call ReadInt							;讀取為無號數放入eax
 00000051  66| 83 F8 64			cmp ax,100								;比對是否大於100
 00000055  77 34			ja Again								;若大於跳至Again
 00000057  66| 83 F8 00			cmp ax,0								;比對是否小於0
 0000005B  72 2E			jb Again								;若小於跳至Again
 0000005D  66| 89 86			mov [math_array+esi],ax					;若都不成立ax則放入數學陣列
	   000000F2 R
					;-------------------------------------
 00000064  BA 00000057 R		Mov edx,offset str3						;搬入請輸入英文成績
 00000069  E8 00000000 E		Call WriteString						;呼叫印出字串
 0000006E  E8 00000000 E		call ReadInt							;讀取為無號數放入eax
 00000073  66| 83 F8 64			cmp ax,100								;比對是否大於100
 00000077  77 12			ja Again								;若大於跳至Again
 00000079  66| 83 F8 00			cmp ax,0								;比對是否小於0
 0000007D  72 0C			jb Again								;若小於跳至Again
 0000007F  66| 89 86			mov [english_array+esi],ax				;若都不成立ax則放入英文陣列
	   000000FE R
					;-------------------------------------
 00000086  83 C6 02			add esi,2                               ;esi+2 前往下一個儲存格
 00000089  EB 14			jmp Next								;跳至Next
 0000008B			Again:
 0000008B  BA 00000098 R		Mov edx,offset str10					;搬入輸入錯誤
 00000090  E8 00000000 E		Call WriteString						;呼叫印出字串
 00000095  E8 00000000 E		Call Crlf								;換行
 0000009A  E9 FFFFFF6B			jmp KeyIn								;重新回到輸入
 0000009F			Next:
 0000009F  83 F9 01			cmp ecx,1								;判斷是否ecx=1
 000000A2  74 06			je Next2								;如果等於跳出迴圈
 000000A4  49				dec ecx									;若否 ecx -1
 000000A5  E9 FFFFFF60			jmp KeyIn								;跳至KeyIn
				;----------------------------------------------------------------------------
 000000AA			Next2:
 000000AA  BE 00000000			mov esi,0								;設esi為0
 000000AF  B9 00000006			mov ecx,6								;設次數為6
 000000B4			AddSum:
 000000B4  B8 00000000			mov eax,0								;ecx歸零
 000000B9  66| 03 86			add ax,[chinese_array+esi]				;ax與國文成績相加
	   000000E6 R
 000000C0  66| 03 86			add ax,[math_array+esi]					;ax與數學成績相加
	   000000F2 R
 000000C7  66| 03 86			add ax,[english_array+esi]				;ax與英文成績相加
	   000000FE R
 000000CE  66| 89 86			mov [sum_array+esi],ax					;把ax放入總成績陣列中
	   0000010A R
 000000D5  83 C6 02			add esi,2								;esi+2前往下一儲存格
 000000D8  E2 DA			loop AddSum								;如果ecx大於1回到Addsum
				;--------------------------------------------------------bubble sort start
 000000DA  B9 00000005			mov ecx,5								;設次數為5
 000000DF  B8 00000000			mov eax,0								;eax歸零
 000000E4			L2:
 000000E4  51				push ecx								;將ecx數字壓入stack中
 000000E5  BE 00000000			mov esi,0								;將esi歸零
 000000EA			L3:
 000000EA  0F B7 86			movzx eax,[sum_array+esi]				;把第esi個總成績放入eax
	   0000010A R
 000000F1  0F B7 9E			movzx ebx,[sum_array+esi+2]				;把第esi+2個總成績放入ebx
	   0000010C R
 000000F8  66| 3B D8			cmp bx,ax								;比較ebx和eax
 000000FB  72 7E			jb L4									;若小於跳至L4若大於等於執行以下
 000000FD  66| 89 9E			mov [sum_array+esi],bx
	   0000010A R
 00000104  66| 89 86			mov [sum_array+esi+2],ax
	   0000010C R

 0000010B  66| 8B 86			mov ax,[name_array+esi]	
	   000000BE R
 00000112  66| 8B 9E			mov bx,[name_array+esi+2]
	   000000C0 R
 00000119  66| 89 9E			mov [name_array+esi],bx
	   000000BE R
 00000120  66| 89 86			mov [name_array+esi+2],ax
	   000000C0 R

 00000127  66| 8B 86			mov ax,[chinese_array+esi]
	   000000E6 R
 0000012E  66| 8B 9E			mov bx,[chinese_array+esi+2]
	   000000E8 R
 00000135  66| 89 9E			mov [chinese_array+esi],bx
	   000000E6 R
 0000013C  66| 89 86			mov [chinese_array+esi+2],ax
	   000000E8 R

 00000143  66| 8B 86			mov ax,[math_array+esi]
	   000000F2 R
 0000014A  66| 8B 9E			mov bx,[math_array+esi+2]
	   000000F4 R
 00000151  66| 89 9E			mov [math_array+esi],bx
	   000000F2 R
 00000158  66| 89 86			mov [math_array+esi+2],ax
	   000000F4 R

 0000015F  66| 8B 86			mov ax,[english_array+esi]
	   000000FE R
 00000166  66| 8B 9E			mov bx,[english_array+esi+2]
	   00000100 R
 0000016D  66| 89 9E			mov [english_array+esi],bx
	   000000FE R
 00000174  66| 89 86			mov [english_array+esi+2],ax
	   00000100 R
 0000017B			L4:
 0000017B  83 C6 02			add esi,2								;esi+2 前往下一格儲存格
 0000017E  49				dec ecx									;ecx次數-1
 0000017F  0F 85 FFFFFF65		jne L3									;如果不相同 跳至L3
 00000185  59				pop ecx									;將原本stack 放回 ecx
 00000186  49				dec ecx									;ecx次數減一
 00000187  0F 85 FFFFFF57		jne L2									;跳回L2
				;----------------------------------------------------------bubble sort End
				;-----------------------------------------Place start
 0000018D  B9 00000006			mov ecx,6                               ;次數設為6
 00000192  B8 00000000			mov eax,0								;eax歸零
 00000197  BE 00000000			mov esi,0								;esi歸零
 0000019C  66| BF 0001			mov di,1								;給定名次為1放進di中
 000001A0  66| C7 05			mov [place_array],1						;給一開始的儲存格為第一名
	   00000116 R
	   0001
 000001A9  83 FE 00			cmp esi,0								;為第一次
 000001AC  74 27			je Next3 								;跳到Next3
 000001AE			CountPlace:
 000001AE  66| 8B 86			mov ax,[sum_array+esi]					;將第esi個總成績放入ax
	   0000010A R
 000001B5  66| 8B 9E			mov bx,[sum_array+esi-2]				;將第esi-2個總成績放入bx
	   00000108 R
 000001BC  66| 3B C3			cmp ax,bx								;比較ax與bx
 000001BF  75 14			jne Next3 								;若不相等 跳到Next3
 000001C1  66| 50			push ax									;將原本AX壓入stack中
 000001C3  66| 8B 86			mov ax,[place_array+esi-2]				;將第esi-2個名次放入ax
	   00000114 R
 000001CA  66| 89 86			mov [place_array+esi],ax				;把第esi名次與第esi-2名次變成一樣
	   00000116 R
 000001D1  66| 58			pop ax									;還原原本的AX
 000001D3  EB 07			jmp Next4 								;跳到 Next4
 000001D5			Next3:
 000001D5  66| 89 BE			mov [place_array+esi],di				;將名次搬入第esi個
	   00000116 R
 000001DC			Next4:
 000001DC  66| 47			inc di									;名次++
 000001DE  83 C6 02			add esi,2								;前往下一個名次儲存格
 000001E1  E2 CB			loop CountPlace							;迴圈CountPlace
				;-----------------------------------------place end
				;----------------------------------------------------Print Start
 000001E3  BA 00000073 R		Mov edx,offset str4						;將粍字串搬進
 000001E8  E8 00000000 E		Call WriteString						;呼叫印出字串
 000001ED  BA 0000007A R		Mov edx,offset str5						;將粍字串搬進
 000001F2  E8 00000000 E		Call WriteString						;呼叫印出字串
 000001F7  BA 00000080 R		Mov edx,offset str6						;將粍字串搬進
 000001FC  E8 00000000 E		Call WriteString						;呼叫印出字串
 00000201  BA 00000086 R		Mov edx,offset str7						;將粍字串搬進
 00000206  E8 00000000 E		Call WriteString						;呼叫印出字串
 0000020B  BA 0000008C R		Mov edx,offset str8						;將粍字串搬進
 00000210  E8 00000000 E		Call WriteString						;呼叫印出字串
 00000215  BA 00000092 R		Mov edx,offset str9						;將粍字串搬進
 0000021A  E8 00000000 E		Call WriteString						;呼叫印出字串
					;-----------------------------------------
 0000021F  B8 00000000			mov eax,0								;eax歸零
 00000224  BE 00000000			mov esi,0								;esi歸零
 00000229  B9 00000006			mov ecx,6								;次數設定為6
					;-------------------------------------
 0000022E			PrintOther:
 0000022E  E8 00000000 E		call Crlf								;換行
 00000233  66| 8B 86			mov ax, [name_array+esi]				;將第esi個學號放入ax
	   000000BE R
 0000023A  E8 00000000 E		call WriteDec							;印出無號數十進位
 0000023F  66| B8 0020			mov ax,' '								;設定ax為空白
 00000243  E8 00000000 E	    call WriteChar							;印出空白
 00000248  E8 00000000 E		call WriteChar							;印出空白
 0000024D  E8 00000000 E		call WriteChar							;印出空白
 00000252  66| 8B 86			mov ax, [chinese_array+esi]				;將第esi個國文成績放入ax
	   000000E6 R
 00000259  E8 00000000 E		call WriteDec							;印出無號數十進位
 0000025E  66| B8 0020			mov ax,' '								;設定ax為空白
 00000262  E8 00000000 E	    call WriteChar							;印出空白
 00000267  E8 00000000 E		call WriteChar							;印出空白
 0000026C  E8 00000000 E		call WriteChar							;印出空白
 00000271  66| 8B 86			mov ax, [math_array+esi]				;將第esi個數學成績放入ax
	   000000F2 R
 00000278  E8 00000000 E		call WriteDec							;印出無號數十進位
 0000027D  66| B8 0020			mov ax,' '								;設定ax為空白
 00000281  E8 00000000 E	    call WriteChar							;印出空白
 00000286  E8 00000000 E		call WriteChar							;印出空白
 0000028B  E8 00000000 E		call WriteChar							;印出空白
 00000290  66| 8B 86			mov ax, [english_array+esi]				;將第esi個英文成績放入ax
	   000000FE R
 00000297  E8 00000000 E		call WriteDec							;印出無號數十進位
 0000029C  66| B8 0020			mov ax,' '								;設定ax為空白
 000002A0  E8 00000000 E	    call WriteChar							;印出空白
 000002A5  E8 00000000 E		call WriteChar							;印出空白
 000002AA  66| 8B 86			mov ax, [sum_array+esi]					;將第esi個總成績放入ax
	   0000010A R
 000002B1  E8 00000000 E		call WriteDec							;印出無號數十進位
 000002B6  66| B8 0020			mov ax,' '								;設定ax為空白
 000002BA  E8 00000000 E	    call WriteChar							;印出空白
 000002BF  E8 00000000 E		call WriteChar							;印出空白
 000002C4  E8 00000000 E		call WriteChar							;印出空白
 000002C9  E8 00000000 E		call WriteChar							;印出空白
 000002CE  66| 8B 86			mov ax, [place_array+esi]				;將第esi個名次放入ax
	   00000116 R
 000002D5  E8 00000000 E		call WriteDec							;印出無號數十進位
 000002DA  83 C6 02			add esi,2								;前往下一個處存格
 000002DD  83 F9 01			cmp ecx,1								;比對ecx和1
 000002E0  74 06			je Next5								;若等於跳出迴圈
 000002E2  49				dec ecx									;ecx次數-1
 000002E3  E9 FFFFFF46			jmp PrintOther							;跳回PrintOther
				;-------------------------------------------------------print end
 000002E8			Next5:
 000002E8  BA 000000B9 R		Mov edx,offset str11					;搬入請輸入學號字串
 000002ED  E8 00000000 E		Call WriteString                        ;呼叫印出字串
 000002F2  E8 00000000 E		call ReadDec                            ;讀取為無號數放入eax
 000002F7  A2 00000122 R		mov stop,al				    ;將讀取到的ax放進姓名的陣列中
				exit
 00000303			main ENDP
				END main
Microsoft (R) Macro Assembler Version 12.00.21005.1	    05/11/16 12:43:46
MASM Template(main.asm					     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000125 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000303 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000303 Public STDCALL
  KeyIn  . . . . . . . . . . . .	L Near	 0000000A _TEXT	
  Again  . . . . . . . . . . . .	L Near	 0000008B _TEXT	
  Next . . . . . . . . . . . . .	L Near	 0000009F _TEXT	
  Next2  . . . . . . . . . . . .	L Near	 000000AA _TEXT	
  AddSum . . . . . . . . . . . .	L Near	 000000B4 _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 000000E4 _TEXT	
  L3 . . . . . . . . . . . . . .	L Near	 000000EA _TEXT	
  L4 . . . . . . . . . . . . . .	L Near	 0000017B _TEXT	
  CountPlace . . . . . . . . . .	L Near	 000001AE _TEXT	
  Next3  . . . . . . . . . . . .	L Near	 000001D5 _TEXT	
  Next4  . . . . . . . . . . . .	L Near	 000001DC _TEXT	
  PrintOther . . . . . . . . . .	L Near	 0000022E _TEXT	
  Next5  . . . . . . . . . . . .	L Near	 000002E8 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
baffer . . . . . . . . . . . . .	Word	 00000123 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
chinese_array  . . . . . . . . .	Word	 000000E6 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
english_array  . . . . . . . . .	Word	 000000FE _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
keyInput . . . . . . . . . . . .	Byte	 00000000 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
math_array . . . . . . . . . . .	Word	 000000F2 _DATA	
name_array . . . . . . . . . . .	Word	 000000BE _DATA	
place_array  . . . . . . . . . .	Word	 00000116 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
stop . . . . . . . . . . . . . .	Byte	 00000122 _DATA	
str10  . . . . . . . . . . . . .	Byte	 00000098 _DATA	
str11  . . . . . . . . . . . . .	Byte	 000000B9 _DATA	
str1 . . . . . . . . . . . . . .	Byte	 0000001F _DATA	
str2 . . . . . . . . . . . . . .	Byte	 0000003B _DATA	
str3 . . . . . . . . . . . . . .	Byte	 00000057 _DATA	
str4 . . . . . . . . . . . . . .	Byte	 00000073 _DATA	
str5 . . . . . . . . . . . . . .	Byte	 0000007A _DATA	
str6 . . . . . . . . . . . . . .	Byte	 00000080 _DATA	
str7 . . . . . . . . . . . . . .	Byte	 00000086 _DATA	
str8 . . . . . . . . . . . . . .	Byte	 0000008C _DATA	
str9 . . . . . . . . . . . . . .	Byte	 00000092 _DATA	
sum_array  . . . . . . . . . . .	Word	 0000010A _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
